#!/usr/bin/perl
use 5.010;
use strict;
use warnings;
use Getopt::Long qw/:config auto_abbrev auto_help/;
use Ndn::Dreamhost::Service;

GetOptions();
my $orig_spec = shift;
my $quiet     = !-t STDOUT;
my $too_many  = 100;

# Display list of service types if called without args.
if (!$orig_spec) {
	my @STs = Ndn::Common::Db->new('dreamhost')->makearray(
		"SELECT DISTINCT(type) FROM service WHERE status='active'"
	);
	say for @STs;
	exit;
}

# Missing colon -> treat as a machine/cluster name
my $spec;
$spec     = "$orig_spec:%" if $orig_spec !~ /:/;
my @Services = Ndn::Dreamhost::Service::Find($spec || $orig_spec);

# Didn't find anything. Try searching for service types next.
if (!@Services && !$quiet && $orig_spec !~ /:/) {
	my $st_count = Ndn::Common::Db->new('dreamhost')->getvalue(
		"SELECT COUNT(1) FROM service WHERE type=?", $orig_spec
	);
	if ($st_count > $too_many) {
		say "Found $st_count services. Quitting before the controllers explode.";
		exit 1;
	} else {
		@Services = Ndn::Dreamhost::Service->LoadAll({ type => $orig_spec });
	}
}

for my $Service (@Services) {
	say fmt_service($Service);
}

print "No matching services found.\n" if !@Services && !$quiet;

sub fmt_service {
	my ($Service) = @_;

	my $name = $Service->home . ":" . $Service->service;
	return $name if $quiet;

	my @info;
	push @info, $Service->type;
	push @info, "<inactive>" if $Service->status eq 'inactive';
	if (my $Parent = $Service->Parent) {
		push @info, "[" . $Parent->name . "]";
	}

	return sprintf "%-30s %s", $name, join(" ", @info);
}

=head1 SYNOPSIS

	dh-service
	dh-service <options>
	dh-service <home> | <home>:%
	dh-service <service-type>
	dh-service <home>:<service-type>

Options:

	--help  | -h            display this help

Examples:

	dh-service              list active service types
	dh-service yakko        list all home:service-type pairs run by yakko
	dh-service inetd        list all home:service-type pairs related to inetd run anywhere
	dh-service yakko:inetd  list just the inted service run by yakko
